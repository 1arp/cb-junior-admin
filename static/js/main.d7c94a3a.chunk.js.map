{"version":3,"sources":["FIREBASE_CONFIG.js","lib/DraggableFormInput.jsx","lib/OrderedFormIterator.jsx","courses.tsx","contents.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","compose","translate","withStyles","theme","_line","line","display","listStyleType","borderBottom","concat","palette","divider","Object","defineProperty","breakpoints","down","opacity","transform","transition","index","width","paddingTop","form","flex","action","leftIcon","marginRight","spacing","unit","_ref","basePath","children","_ref$classes","classes","id","member","onRemove","record","resource","react_default","a","createElement","react_beautiful_dnd_esm","draggableId","provided","assign","className","ref","innerRef","draggableProps","Reorder_default","dragHandleProps","Children","map","input","FormInput","cloneElement","source","props","label","Button","size","onClick","RemoveCircleOutline_default","OrderedFormIterator","_Component","inherits","_super","_createSuper","_this","classCallCheck","this","call","removeField","fields","ids","splice","remove","addField","push","nextId","onDragEnd","result","destination","startIndex","endIndex","_this$ids$splice","removed","slicedToArray","move","createClass","key","value","_this2","_this$props","_this$props$classes","_this$props$meta","meta","error","submitFailed","droppableId","root","TransitionGroup","CSSTransition","timeout","classNames","lib_DraggableFormInput","objectWithoutProperties","sanitizeProps","AddCircleOutline_default","Component","padding","marginBottom","& > li:last-child","CourseFilter","react","Filter","TextInput","alwaysOn","CourseList","List","filters","courses_CourseFilter","Datagrid","TextField","RichTextField","ShowButton","EditButton","DeleteButton","CourseShow","Show","SimpleShowLayout","ImageField","ReferenceArrayField","reference","UrlField","CourseCreate","Create","SimpleForm","esm","ImageInput","title","ReferenceArrayInput","AutocompleteArrayInput","optionText","lib_OrderedFormIterator","CourseEdit","Edit","ContentFilter","ContentList","contents_ContentFilter","ContentShow","ContentCreate","SelectInput","choices","name","ContentEdit","config","require","options","logging","watch","dataProvider","FirebaseDataProvider","authProvider","FirebaseAuthProvider","App","Admin","Resource","list","show","create","edit","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7c94a3a.chunk.js","sourcesContent":["export const firebaseConfig = {\n  apiKey: \"AIzaSyDqO-MwdZoYUGVwuQOPbh4R-a0eoItr35A\",\n  authDomain: \"localhost\",\n  databaseURL: \"https://cb-junior.firebaseio.com\",\n  projectId: \"cb-junior\",\n  storageBucket: \"cb-junior.appspot.com\",\n  messagingSenderId: \"aaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n};","import React, { Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/RemoveCircleOutline';\nimport MoveIcon from '@material-ui/icons/Reorder';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { translate } from 'ra-core';\n\nimport { FormInput } from 'react-admin';\n\nconst styles = theme => ({\n  line: {\n    display: 'flex',\n    listStyleType: 'none',\n    borderBottom: `solid 1px ${theme.palette.divider}`,\n    [theme.breakpoints.down('xs')]: { display: 'block' },\n    '&.fade-enter': {\n      opacity: 0.01,\n      transform: 'translateX(100vw)',\n    },\n    '&.fade-enter-active': {\n      opacity: 1,\n      transform: 'translateX(0)',\n      transition: 'all 500ms ease-in',\n    },\n    '&.fade-exit': {\n      opacity: 1,\n      transform: 'translateX(0)',\n    },\n    '&.fade-exit-active': {\n      opacity: 0.01,\n      transform: 'translateX(100vw)',\n      transition: 'all 500ms ease-in',\n    },\n  },\n  index: {\n    width: '3em',\n    paddingTop: '1em',\n    [theme.breakpoints.down('sm')]: { display: 'none' },\n  },\n  form: { flex: 2 },\n  action: {\n    paddingTop: '0.5em',\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nexport const DraggableFormInput = ({\n                                     basePath,\n                                     children,\n                                     classes = {},\n                                     id,\n                                     index,\n                                     member,\n                                     onRemove,\n                                     record,\n                                     resource,\n                                     translate,\n                                   }) => (\n  <Draggable draggableId={id} index={index}>\n    {provided => (\n      <li\n        className={classes.line}\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n      >\n        <MoveIcon\n          className={classes.index}\n          {...provided.dragHandleProps}\n        />\n        <section className={classes.form}>\n          {Children.map(children, input => (\n            <FormInput\n              basePath={basePath}\n              input={cloneElement(input, {\n                source: `${member}.${input.props.source}`,\n                label: input.props.label || input.props.source,\n              })}\n              record={record}\n              resource={resource}\n            />\n          ))}\n        </section>\n        <span className={classes.action}>\n                    <Button size=\"small\" onClick={onRemove(index)}>\n                        <CloseIcon className={classes.leftIcon} />\n                      {translate('ra.action.remove')}\n                    </Button>\n                </span>\n      </li>\n    )}\n  </Draggable>\n);\n\nDraggableFormInput.propTypes = {\n  basePath: PropTypes.string,\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  id: PropTypes.number,\n  index: PropTypes.number,\n  member: PropTypes.string,\n  onRemove: PropTypes.func,\n  record: PropTypes.object,\n  resource: PropTypes.string,\n  translate: PropTypes.func,\n};\n\nexport default compose(translate, withStyles(styles))(DraggableFormInput);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport { translate } from 'ra-core';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nimport DraggableFormInput from './DraggableFormInput';\n\nconst sanitizeProps = ({ classes, ...props }) => props;\n\nconst styles = theme => ({\n  root: {\n    padding: 0,\n    marginBottom: 0,\n    '& > li:last-child': {\n      borderBottom: 'none',\n    },\n  },\n  line: {\n    display: 'flex',\n    listStyleType: 'none',\n    borderBottom: `solid 1px ${theme.palette.divider}`,\n    [theme.breakpoints.down('xs')]: { display: 'block' },\n    '&.fade-enter': {\n      opacity: 0.01,\n      transform: 'translateX(100vw)',\n    },\n    '&.fade-enter-active': {\n      opacity: 1,\n      transform: 'translateX(0)',\n      transition: 'all 500ms ease-in',\n    },\n    '&.fade-exit': {\n      opacity: 1,\n      transform: 'translateX(0)',\n    },\n    '&.fade-exit-active': {\n      opacity: 0.01,\n      transform: 'translateX(100vw)',\n      transition: 'all 500ms ease-in',\n    },\n  },\n  form: { flex: 2 },\n  action: {\n    paddingTop: '0.5em',\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nexport class OrderedFormIterator extends Component {\n  constructor(props) {\n    super(props);\n    // we need a unique id for each field for a proper enter/exit animation\n    // but redux-form doesn't provide one (cf https://github.com/erikras/redux-form/issues/2735)\n    // so we keep an internal map between the field position and an autoincrement id\n    this.nextId = 0;\n    this.ids = props.fields ? props.fields.map(() => this.nextId++) : [];\n  }\n\n  removeField = index => () => {\n    const { fields } = this.props;\n    this.ids.splice(index, 1);\n    fields.remove(index);\n  };\n\n  addField = () => {\n    const { fields } = this.props;\n    this.ids.push(this.nextId++);\n    fields.push({});\n  };\n\n  onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const { fields } = this.props;\n    const startIndex = result.source.index;\n    const endIndex = result.destination.index;\n    const [removed] = this.ids.splice(startIndex, 1);\n    this.ids.splice(endIndex, 0, removed);\n    fields.move(startIndex, endIndex);\n  };\n\n  render() {\n    const {\n      classes = {},\n      fields,\n      meta: { error, submitFailed },\n      translate,\n    } = this.props;\n    return fields ? (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {provided => (\n            <ul className={classes.root} ref={provided.innerRef}>\n              {submitFailed && error && <span>{error}</span>}\n              <TransitionGroup>\n                {fields.map((member, index) => (\n                  <CSSTransition\n                    key={this.ids[index]}\n                    timeout={500}\n                    classNames=\"fade\"\n                  >\n                    <DraggableFormInput\n                      id={this.ids[index]}\n                      index={index}\n                      member={member}\n                      onRemove={this.removeField}\n                      {...sanitizeProps(this.props)}\n                    />\n                  </CSSTransition>\n                ))}\n              </TransitionGroup>\n              <li className={classes.line}>\n                                <span className={classes.action}>\n                                    <Button\n                                      size=\"small\"\n                                      onClick={this.addField}\n                                    >\n                                        <AddIcon className={classes.leftIcon} />\n                                      {translate('ra.action.add')}\n                                    </Button>\n                                </span>\n              </li>\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    ) : null;\n  }\n}\n\nOrderedFormIterator.propTypes = {\n  basePath: PropTypes.string,\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  fields: PropTypes.object,\n  meta: PropTypes.object,\n  record: PropTypes.object,\n  resource: PropTypes.string,\n  translate: PropTypes.func,\n};\n\nexport default compose(translate, withStyles(styles))(OrderedFormIterator);","// in src/Courses.js\nimport * as React from \"react\";\n// tslint:disable-next-line:no-var-requires\nimport {\n  Datagrid,\n  List,\n  Show,\n  Create,\n  Edit,\n  Filter,\n  // DisabledInput,\n  SimpleShowLayout,\n  ReferenceField,\n  SimpleForm,\n  TextField,\n  TextInput,\n  ShowButton,\n  EditButton,\n  DeleteButton,\n  RichTextField,\n  SelectInput,\n  FileField,\n  FileInput,\n  ReferenceInput,\n  ReferenceArrayField,\n  ImageField,\n  ReferenceArrayInput,\n  AutocompleteArrayInput,\n  ImageInput,\n  UrlField,\n  SimpleFormIterator\n} from \"react-admin\";\n\nimport OrderedFormIterator from './lib/OrderedFormIterator'\nimport RichTextInput from \"ra-input-rich-text\";\n\nconst CourseFilter = (props: any) => {\n  return (<Filter {...props}>\n    <TextInput label=\"Search\" source=\"title\" alwaysOn />\n  </Filter>);\n};\n\n\nexport const CourseList = (props: any) => (\n  <List {...props} filters={<CourseFilter />}>\n    <Datagrid>\n      <TextField source=\"title\" />\n      <RichTextField source=\"subtitle\" />\n      <TextField source=\"slug\" />\n      <ShowButton label=\"\" />\n      <EditButton label=\"\" />\n      <DeleteButton label=\"\" />\n    </Datagrid>\n  </List>\n);\n\nexport const CourseShow = (props: any) => (\n  <Show {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"id\" />\n      <TextField source=\"title\" />\n      <RichTextField source=\"subtitle\" />\n      <TextField source=\"slug\" />\n      <ImageField source=\"logo.src\" />\n      <ImageField source=\"background.src\" />\n      <ReferenceArrayField source=\"contents\" label=\"Contents\" reference=\"contents\">\n        <Datagrid>\n          <TextField source=\"title\" label=\"Title\"/>\n          <UrlField source=\"url\" label=\"Url\"/>\n        </Datagrid>\n      </ReferenceArrayField>\n    </SimpleShowLayout>\n  </Show>\n);\n\nexport const CourseCreate = (props: any) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"title\" />\n      <RichTextInput source=\"subtitle\" />\n      <TextInput source=\"slug\" />\n      <ImageInput source=\"logo\">\n        <ImageField source=\"src\" title=\"title\" />\n      </ImageInput>\n      <ImageInput source=\"background\">\n        <ImageField source=\"src\" title=\"title\" />\n      </ImageInput>\n      <ReferenceArrayInput label=\"contents\" source=\"contents\" reference=\"contents\">\n        <AutocompleteArrayInput optionText=\"title\" />\n        <OrderedFormIterator />\n      </ReferenceArrayInput>\n    </SimpleForm>\n  </Create>\n);\n\nexport const CourseEdit = (props: any) => (\n  <Edit {...props}>\n    <SimpleForm>\n      {/* <DisabledInput source=\"id\" /> */}\n      <TextInput source=\"title\" />\n      <RichTextInput source=\"subtitle\" />\n      <TextInput source=\"slug\" />\n      <ImageInput source=\"logo\">\n        <ImageField source=\"src\" title=\"title\" />\n      </ImageInput>\n      <ImageInput source=\"background\">\n        <ImageField source=\"src\" title=\"title\" />\n      </ImageInput>\n      {/* <ReferenceInput\n        label=\"Instrcutor\"\n        source=\"instructor\"\n        reference=\"Instructors\"\n        // filter={{ isAdmin: true }}\n      >\n        <SelectInput label=\"Instructor\" optionText=\"firstname\" />\n      </ReferenceInput> */}\n      <ReferenceArrayInput label=\"contents\" source=\"contents\" reference=\"contents\">\n        <AutocompleteArrayInput optionText='title'/>\n      </ReferenceArrayInput>\n      {/* <SelectInput\n        source=\"rating\"\n        choices={[\n          { id: 1, name: \"Good\" },\n          { id: 2, name: \"Okay\" },\n          { id: 3, name: \"Bad\" }\n        ]}\n      />\n      <FileInput source=\"file\" label=\"File\" accept=\"application/pdf\">\n        <FileField source=\"src\" title=\"title\" />\n      </FileInput> */}\n    </SimpleForm>\n  </Edit>\n);\n","// in src/posts.js\nimport * as React from \"react\";\n// tslint:disable-next-line:no-var-requires\nimport {\n  Datagrid,\n  List,\n  Show,\n  Create,\n  Edit,\n  Filter,\n  // DisabledInput,\n  SimpleShowLayout,\n  SimpleForm,\n  TextField,\n  TextInput,\n  ShowButton,\n  EditButton,\n  DeleteButton,\n  RichTextField,\n  SelectInput,\n  FileField,\n  FileInput,\n  UrlField\n} from \"react-admin\";\nimport RichTextInput from \"ra-input-rich-text\";\n\nconst ContentFilter = (props: any) => {\n  return (<Filter {...props}>\n    <TextInput label=\"Search\" source=\"title\" alwaysOn />\n  </Filter>);\n};\n\nexport const ContentList = (props: any) => (\n  <List {...props} filters={<ContentFilter />}>\n    <Datagrid>\n      <TextField source=\"title\" />\n      <TextField source=\"type\" />\n      <ShowButton label=\"\" />\n      <EditButton label=\"\" />\n      {/*<DeleteButton label=\"\" />*/}\n    </Datagrid>\n  </List>\n);\n\nexport const ContentShow = (props: any) => (\n  <Show {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"title\" />\n      <TextField source=\"type\" />\n      <UrlField source=\"url\" />\n    </SimpleShowLayout>\n  </Show>\n);\n\nexport const ContentCreate = (props: any) => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"title\" />\n      <SelectInput\n          source=\"type\"\n          choices={[\n            { id: 'ytvideo', name: \"Youtube Video\" },\n          ]}\n      />\n      <TextInput source=\"url\" />\n    </SimpleForm>\n  </Create>\n);\n\nexport const ContentEdit = (props: any) => (\n  <Edit {...props}>\n    <SimpleForm>\n      {/* <DisabledInput source=\"id\" /> */}\n      <TextInput source=\"title\" />\n      <SelectInput\n          source=\"type\"\n          choices={[\n            { id: 'ytvideo', name: \"Youtube Video\" },\n          ]}\n      />\n      <TextInput source=\"url\" />\n    </SimpleForm>\n  </Edit>\n);\n","import * as React from \"react\";\nimport { PostList, PostShow, PostCreate, PostEdit } from \"./posts\";\nimport { CourseList, CourseCreate, CourseEdit, CourseShow } from './courses';\nimport { Admin, Resource } from \"react-admin\";\nimport {\n  FirebaseDataProvider,\n  FirebaseAuthProvider,\n  RAFirebaseOptions\n} from \"react-admin-firebase\";\nimport {ContentCreate, ContentEdit, ContentList, ContentShow} from \"./contents\";\n\nconst config = require(\"./FIREBASE_CONFIG.js\").firebaseConfig;\n\nconst options: RAFirebaseOptions = {\n  logging: true,\n  // rootRef: \"/\",\n  watch: [\"courses\"]\n};\nconst dataProvider = FirebaseDataProvider(config, options);\nconst authProvider = FirebaseAuthProvider(config, options);\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Admin dataProvider={dataProvider} authProvider={authProvider}>\n        <Resource\n          name=\"courses\"\n          list={CourseList}\n          show={CourseShow}\n          create={CourseCreate}\n          edit={CourseEdit}\n        />\n\n        <Resource\n          name=\"Instructors\"\n          list={CourseList}\n          show={CourseShow}\n          create={CourseCreate}\n          edit={CourseEdit}\n        />\n\n        <Resource\n          name=\"contents\"\n          list={ContentList}\n          show={ContentShow}\n          create={ContentCreate}\n          edit={ContentEdit}\n        />\n        \n        {/*<Resource*/}\n        {/*  name=\"posts\"*/}\n        {/*  list={PostList}*/}\n        {/*  show={PostShow}*/}\n        {/*  create={PostCreate}*/}\n        {/*  edit={PostEdit}*/}\n        {/*/>*/}\n      </Admin>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}